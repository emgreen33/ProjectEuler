#The sequence of triangle numbers is generated by adding the natural numbers. 
#So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

#Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.


def triNum(n)
  sum = 0
  (1..n).each { |n| sum += n }
  return sum
end

def factors(n)
  if ( n == 1 )
    return [1]
  end
  
  a = []
  i = 1
  max = n
  while (i < max)
    if ( n % i == 0 ) # i is a factor
      a.push(i)
      
      if ( i != n/i ) # if not square, get the quotient which is a factor as well
        a.push(n/i)
      end
      max = n/i
    end
    i += 1
  end
  
  return a.sort()
end

i = 1
while(factors(triNum(i)).length < 500)
  i += 1
end

puts "answer: #{triNum(i)}"